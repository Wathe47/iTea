openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:9091
  description: Generated server url
paths:
  /api/inventory/update/{inventoryId}:
    put:
      tags:
      - inventory-controller
      operationId: updateInventory
      parameters:
      - name: inventoryId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Inventory"
        required: true
      responses:
        "200":
          description: OK
  /api/inventory/update-order:
    post:
      tags:
      - inventory-controller
      operationId: updateOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderRequest"
        required: true
      responses:
        "200":
          description: OK
  /api/inventory/add:
    post:
      tags:
      - inventory-controller
      operationId: registerNewInventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Inventory"
        required: true
      responses:
        "200":
          description: OK
  /api/inventory/add-new-order:
    post:
      tags:
      - inventory-controller
      operationId: addNewOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderRequest"
        required: true
      responses:
        "200":
          description: OK
  /api/inventory/fetch/{id}:
    get:
      tags:
      - inventory-controller
      operationId: getInventorybyId
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Inventory"
  /api/inventory/all:
    get:
      tags:
      - inventory-controller
      operationId: getInventory
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Inventory"
  /api/inventory/delete/{inventoryId}:
    delete:
      tags:
      - inventory-controller
      operationId: deleteInventory
      parameters:
      - name: inventoryId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
components:
  schemas:
    Inventory:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        price:
          type: integer
          format: int64
        quantity:
          type: integer
          format: int64
        manufacturerEmail:
          type: string
        imageUrls:
          type: array
          items:
            type: string
    OrderRequest:
      type: object
      properties:
        id:
          type: integer
          format: int64
        quantity:
          type: integer
          format: int64
        oldQuantity:
          type: integer
          format: int64
        productId:
          type: integer
          format: int64
